pipeline {
    agent {
        docker {
            image 'amazonlinux:2'  // Use Amazon Linux 2 as the Docker image
            args '-u root'         // Run as root user
        }
    }
    stages {
        stage('Install AWS CLI, kubectl, and awk') {
            steps {
                script {
                    // Update the package manager and install AWS CLI, kubectl, and awk
                    sh '''
                    yum update -y
                    yum install -y aws-cli gawk

                    # Install kubectl version 1.30
                    curl -LO "https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl"
                    chmod +x ./kubectl
                    mv ./kubectl /usr/local/bin/kubectl
                    '''
                }
            }
        }
        stage('Verify Installations') {
            steps {
                script {
                    // Run commands to verify installations
                    sh 'aws --version'
                    sh 'kubectl version --client'
                    sh 'gawk --version'
                }
            }
        }
        stage('Configure AWS Credentials') {
            steps {
                script {
                    // Use the withCredentials block to access AWS credentials
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-cred']]) {
                        // Set AWS environment variables
                        sh '''
                        export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                        export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                        export AWS_DEFAULT_REGION=ap-southeast-2  # Change to your desired region
                        '''
                        
                        // Update kubeconfig to connect to the EKS cluster
                        sh '''
                        aws eks update-kubeconfig --name stg-eks --region ap-southeast-2
                        '''
                        
                        // Check the kubeconfig file and update the apiVersion using awk
                        sh '''
                        if [ -f ~/.kube/config ]; then
                            # Use awk to add apiVersion after "exec" block
                            gawk '
                            /"exec": {/ {
                                print $0
                                print "    \"apiVersion\": \"client.authentication.k8s.io/v1beta1\","
                                next
                            }
                            { print }
                            ' ~/.kube/config > ~/.kube/config.tmp && mv ~/.kube/config.tmp ~/.kube/config
                        fi
                        '''
                        
                        // Optionally, you can run a kubectl command to verify the connection
                        sh 'kubectl get nodes'
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
