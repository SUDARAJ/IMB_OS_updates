pipeline {
    agent {
        docker {
            image 'amazonlinux:2'  
            args '-u root' // Run as root user
        }
    }

    environment {
        GIT_REPO_URL = "https://github.com/SUDARAJ/IMB_OS_updates.git"
    }

    stages {
        stage('Install AWS CLI & Kubectl') {
            steps {
                withCredentials([aws(credentialsId: 'aws-cred', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                    cd /root
                    yum install -y unzip
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    unzip -o awscliv2.zip  # Automatically overwrite files without prompting 
                    ./aws/install 
                    aws --version

                    KUBECTL_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
                    curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
                    chmod +x ./kubectl
                    mv ./kubectl /usr/local/bin/kubectl
                    kubectl version --client
                    '''
                }
            }
        }

        stage('Clone Repository') {
            steps {
                sh '''
                cd /root
                yum install -y git
                git clone -b main $GIT_REPO_URL
                ls -ltr
                '''
            }
        }

        stage('Connect to STG') {
            steps {
                withCredentials([aws(credentialsId: 'aws-cred', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                    cd /root
                    aws sts get-caller-identity
                    aws eks --region ap-southeast-2 update-kubeconfig --name stg-eks
                    kubectl get ns
                    kubectl get deployment mail -n support-automations -o=jsonpath='{.spec.template.spec.containers[*].image}'
                    image=$(kubectl get deployment mail -n support-automations -o=jsonpath='{.spec.template.spec.containers[*].image}')

                    cd /root/IMB_OS_updates
                    ls -ltr
                    sed -i "s|^FROM .*|FROM $image|" Dockerfile
                    cat Dockerfile
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}


